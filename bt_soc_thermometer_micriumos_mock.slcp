# Silicon Labs Project Configuration Tools: slcp, v0, Component selection file.
project_name: bt_soc_thermometer_micriumos_mock
label: bt_soc_thermometer_micriumos_mock
description: |
  Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.
category: Bluetooth Examples
filter:
- name: Device Type
  value: [SoC]
- name: Project Difficulty
  value: [Beginner]
- name: Wireless Technology
  value: [Bluetooth]
package: Bluetooth
quality: production
readme:
- {path: readme_rtos.md}
source:
- {path: main.c}
- {path: app.c}
tag: ['hardware:rf:band:2400', 'hardware:component:button:1+', 'hardware:component:sensor:!si7021']
include:
- path: ''
  file_list:
  - {path: app.h}
sdk: {id: gecko_sdk, version: 4.3.0}
toolchain_settings: []
component:
- {id: iostream_retarget_stdio}
- instance: [btn0]
  id: simple_button
- {id: bluetooth_feature_gatt_server}
- instance: [example]
  id: cli
- {id: in_place_ota_dfu}
- {id: bluetooth_feature_sm}
- {id: mpu}
- {id: bluetooth_feature_legacy_advertiser}
- {id: gatt_configuration}
- {id: gatt_service_device_information}
- {id: bluetooth_stack}
- {id: brd2703a_a02}
- {id: rail_util_pti}
- {id: EFR32MG24B210F1536IM48}
- {id: sensor_rht_mock}
- {id: app_log}
- {id: bt_post_build}
- {id: micriumos_kernel}
- {id: app_timer_micriumos}
- {id: bluetooth_feature_connection}
- {id: health_thermometer}
- instance: [vcom]
  id: iostream_usart
- {id: bluetooth_feature_system}
- {id: printf}
- {id: component_catalog}
- {id: bootloader_interface}
- {id: app_assert}
other_file:
- {path: image/readme_img0.png}
- {path: image/readme_rtos_img0.png}
template_contribution:
- condition: [cli]
  name: cli_group
  priority: 0
  value: {name: mflt}
- condition: [cli]
  name: cli_group
  priority: 0
  value: {name: test, id: mflt_test_root, group: mflt}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: export, group: mflt, handler: memfault_emblib_cli_export, help: Export
      data as base64 chunks}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: get_core, group: mflt, handler: memfault_emblib_cli_get_core, help: Get
      current coredump state}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: clear_core, group: mflt, handler: memfault_emlib_cli_clear_core, help: Clear
      coredump from storage}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: get_device_info, group: mflt, handler: memfault_emblib_cli_get_device_info,
    help: Read device info structure}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: assert, group: mflt_test_root, handler: memfault_emblib_cli_assert,
    help: Triggers assert to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: busfault, group: mflt_test_root, handler: memfault_emblib_cli_busfault,
    help: Triggers busfault to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: hang, group: mflt_test_root, handler: memfault_emblib_cli_hang, help: Triggers
      hang to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: hardfault, group: mflt_test_root, handler: memfault_emblib_cli_hardfault,
    help: Triggers hardfault to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: memmanage, group: mflt_test_root, handler: memfault_emblib_cli_memmanage,
    help: Triggers memory management fault to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: usagefault, group: mflt_test_root, handler: memfault_emblib_cli_usagefault,
    help: Triggers usage fault to collect a coredump}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: reboot, group: mflt_test_root, handler: memfault_emblib_cli_reboot,
    help: Triggers reboot to test reboot reason tracking}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: heartbeat, group: mflt_test_root, handler: memfault_emblib_cli_heartbeat,
    help: Trigger capture of heartbeat metrics}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: logs, group: mflt_test_root, handler: memfault_emblib_cli_logs, help: Writes
      logs to internal buffers}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: log_capture, group: mflt_test_root, handler: memfault_emblib_cli_log_capture,
    help: Serializes current log buffer contents}
- condition: [cli]
  name: cli_command
  priority: 0
  value: {name: trace, group: mflt_test_root, handler: memfault_emblib_cli_trace,
    help: Captures a trace event}
configuration:
- {name: SL_STACK_SIZE, value: '2000'}
- {name: SL_HEAP_SIZE, value: '12600'}
- condition: [iostream_usart]
  name: SL_BOARD_ENABLE_VCOM
  value: '1'
- {name: OS_CFG_TMR_EN, value: '1'}
- {name: OS_CFG_DBG_EN, value: '0'}
- {name: OS_CFG_TS_EN, value: '0'}
- {name: OS_CFG_SCHED_ROUND_ROBIN_EN, value: '0'}
- {name: OS_CFG_STK_SIZE_MIN, value: '48'}
- {name: OS_CFG_Q_EN, value: '0'}
- {name: OS_CFG_MON_EN, value: '0'}
- {name: OS_CFG_STAT_TASK_EN, value: '0'}
- {name: OS_CFG_STAT_TASK_STK_CHK_EN, value: '0'}
- {name: OS_CFG_TASK_PROFILE_EN, value: '0'}
- {name: OS_CFG_TASK_Q_EN, value: '0'}
- {name: LIB_MEM_CFG_HEAP_SIZE, value: '2100'}
- {name: SL_CLI_EXAMPLE_TASK_STACK_SIZE, value: '250'}
- {name: SL_CLI_INPUT_BUFFER_SIZE, value: '32'}
- {name: SL_CLI_NUM_HISTORY_BYTES, value: '0'}
- condition: [psa_crypto]
  name: SL_PSA_KEY_USER_SLOT_COUNT
  value: '0'
ui_hints:
  highlight:
  - {path: readme_rtos.md, focus: true}
  - {path: config/btconf/gatt_configuration.btconf}

